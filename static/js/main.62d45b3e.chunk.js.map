{"version":3,"sources":["Website/System/Context/UserContext.ts","Website/Utils/FetchUtils.tsx","Website/Utils/HalUtils.ts","Website/Page/Board.tsx","Website/Page/Home.tsx","Website/Page/Editor.tsx","Website/Page/Post.tsx","Website/Main/Body.tsx","Website/Utils/RenderUtils.tsx","Website/System/Oauth/OauthServer.ts","Website/System/Oauth/OauthProvider.ts","Website/Modal/Login.tsx","Website/Menu/UserMenu.tsx","Website/Main/Header.tsx","Website/Main/Footer.tsx","Website/Website.tsx","index.tsx"],"names":["defaultValue","token","undefined","nickname","loginTime","setContext","clear","React","createContext","method","mode","cache","credentials","redirect","referrer","headers","body","reset","this","setMethod","setMode","setCache","setCredentials","setHeaders","addHeaders","key","setContentType","type","setToken","setRedirect","setReferrer","setBody","content","getData","link","a","init","FetchUtils","href","URL","path","pathname","fetch","then","res","json","catch","error","console","Board","props","state","page","size","data","fetchData","bind","url","response","model","posts","_embedded","writerLinks","map","post","_links","writer","Promise","all","HalUtils","writers","nicknames","member","board","index","self","id","substring","lastIndexOf","tag","title","createDate","views","setState","document","location","onClick","onclick","className","to","Button","disabled","context","variant","Table","striped","hover","tableHead","tableBody","Component","contextType","UserContext","Home","Editor","handleSubmit","formData","postForm","FormData","fileForm","forEach","value","file","name","append","Error","has","req","uploads","upload","Array","postData","JSON","stringify","cancelUpload","e","preventDefault","currentTarget","splitFormData","alert","message","Object","fromEntries","writePost","Form","onSubmit","Group","controlId","Label","Control","as","placeholder","File","multiple","Post","onSubmitReply","match","params","modifiedDate","repliesLink","replies","uploadsLink","writerLink","writerModel","repliesModel","uploadsModel","proxy","log","filename","reply","parse","push","postMenu","replyWriter","Body","exact","component","width","height","parent","parentX","screen","parentY","entries","k","v","join","OauthServer","serverInfo","server","param","qs","client_id","redirect_uri","response_type","scope","authorization_uri","popup","resolve","intervalID","window","setInterval","closed","clearInterval","currentUrl","code","searchParams","get","close","client_secret","grant_type","access_token_uri","access_token","reject","base_uri","provider","Map","open","getAuthorizationUri","RenderUtils","request","set","Login","show","handleShow","handleClose","handleLogin","servername","PopupWindow","getCode","getAccessToken","UserInfo","userInfo","Date","val","sessionStorage","setItem","children","Modal","animation","onHide","backdrop","keyboard","Header","closeButton","Container","fluid","Row","sm","cols","Col","column","span","offset","UserMenu","logout","NavDropdown","Item","Divider","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","Consumer","ctx","Footer","Website","isValid","loadUserInfo","unloadUserInfo","willExpired","refreshAccess","obj","keys","getItem","getTime","ms","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"iPAUaA,EAA+B,CACxCC,WAAMC,EACNC,cAASD,EACTE,eAAUF,EACVG,gBAAWH,EACXI,WAAMJ,GAGKK,MAAMC,cAA+BR,GClBrC,aAEP,MAAO,CACHS,OAAQ,MACRC,KAAM,cACNC,MAAO,UACPC,YAAa,cACbC,SAAU,SACVC,SAAU,SACVC,QAAS,GACTC,KAAM,KAENC,MAVG,WAWCC,KAAKT,OAAS,MACdS,KAAKR,KAAO,cACZQ,KAAKP,MAAQ,UACbO,KAAKN,YAAc,cACnBM,KAAKL,SAAW,SAChBK,KAAKJ,SAAW,SAChBI,KAAKH,QAAU,GACfG,KAAKF,KAAO,MAEhBG,UApBG,SAoBOV,GAEN,OADAS,KAAKT,OAASA,EACPS,MAEXE,QAxBG,SAwBKV,GAEJ,OADAQ,KAAKR,KAAOA,EACLQ,MAEXG,SA5BG,SA4BMV,GAEL,OADAO,KAAKP,MAAQA,EACNO,MAEXI,eAhCG,SAgCYV,GAEX,OADAM,KAAKN,YAAcA,EACZM,MAEXK,WApCG,SAoCQR,GAEP,OADAG,KAAKH,QAAUA,EACRG,MAEXM,WAxCG,SAwCQT,GACP,IAAK,IAAIU,KAAOV,EACZG,KAAKH,QAAQU,GAAOV,EAAQU,GAEhC,OAAOP,MAEXQ,eA9CG,SA8CYC,GAEX,OADAT,KAAKH,QAAQ,gBAAkBY,EACxBT,MAEXU,SAlDG,SAkDM3B,GAEL,OADAiB,KAAKH,QAAL,+BAA0Cd,GACnCiB,MAEXW,YAtDG,SAsDShB,GAER,OADAK,KAAKL,SAAWA,EACTK,MAEXY,YA1DG,SA0DShB,GAER,OADAI,KAAKJ,SAAWA,EACTI,MAEXa,QA9DG,SA8DKC,GAEJ,OADAd,KAAKF,KAAOgB,EACLd,QC/DR,GACXe,QAAQ,WAAD,4BAAE,WAAoBC,GAApB,mBAAAC,EAAA,6DACCC,EAAOC,IACPC,EAAO,IAAIC,IAAIL,EAAKI,MACpBE,EAAOF,EAAKG,SAHb,kBAKEC,MAAMF,EAAMJ,GACdO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,OAP7B,2CAAF,mDAAC,ICQSE,E,kDAGjB,WAAYC,GAAe,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACTC,KAAM,EACNC,KAAM,GACNC,KAAM,IAGV,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBARK,E,wDAYb,IAAD,OACR,sBAAC,kDAAArB,EAAA,6DACSC,EAAOC,IADhB,EAEwB,EAAKc,MAAnBC,EAFV,EAEUA,KAAMC,EAFhB,EAEgBA,KACPI,EAAM,wBAAmBL,EAAnB,iBAAgCC,GAC5CjB,EAAKZ,WAAW,CAAC,eAAgB,qBAJpC,SAM0BkB,MAAMe,EAAKrB,GANrC,cAMSsB,EANT,gBAO6CA,EAASb,OAPtD,cAOSc,EAPT,OAQSC,EAAiCD,EAAME,UAAUD,MACjDE,EAAcF,EAAMG,KAAI,SAAAC,GAAI,OAAIA,EAAKC,OAAOC,UATrD,UAWyBC,QAAQC,IAAIN,EAAYC,KAAI,SAAC7B,GAAD,OAC9CmC,EAASpC,QAAiCC,OAZjD,QAWSoC,EAXT,OAaSC,EAAYD,EAAQP,KAAI,SAACS,GAAD,OAAoCA,EAAOrE,YACnEsE,EAAQb,EAAMG,KAAI,SAACC,EAAMU,GAC3B,IAAMlC,EAAOwB,EAAKC,OAAOU,KAAKrC,KAC9B,MAAO,CACHsC,GAAIpC,EAAKqC,UAAUrC,EAAKsC,YAAY,KAAO,GAC3CC,IAAKf,EAAKe,IACVC,MAAOhB,EAAKgB,MACZ7E,SAAUoE,EAAUG,GACpBO,WAAYjB,EAAKiB,WACjBC,MAAOlB,EAAKkB,UAGpB,EAAKC,SAAS,CAAC7B,KAAMmB,IAzBxB,2CAAD,K,0CA8BAvD,KAAKqC,c,kCAIL,OACI,+BACI,oCACA,qCACA,8CACA,oDACA,0DACA,yD,8BAKJmB,GACJU,SAASC,SAAS/C,KAAlB,kBAAkCoC,K,kCAIzB,IAAD,SACmBxD,KAAKiC,MADxB,EACDC,KADC,EACKC,KAEb,OAHQ,EACWC,KAEPS,KAAI,SAACC,EAAMU,GAAP,OACZ,qBAAkBY,QAAS,kBAAM,EAAKC,QAAQvB,EAAKY,KAAnD,UACI,6BAAKZ,EAAKY,KACV,6BAAKZ,EAAKe,MACV,6BAAKf,EAAKgB,QACV,6BAAKhB,EAAK7D,WACV,6BAAK6D,EAAKiB,aACV,6BAAKjB,EAAKkB,UANLlB,EAAKY,S,+BAYlB,OACI,sBAAKY,UAAW,uBAAhB,UACI,0CACA,cAAC,IAAD,CAAMC,GAAG,UAAT,SACI,cAACC,EAAA,EAAD,CAAQF,UAAU,cACVG,UAAWzE,KAAK0E,QAAQ3F,MACxB4F,QAAS3E,KAAK0E,QAAQ3F,MAAQ,UAAY,gBAFlD,4BAKJ,eAAC6F,EAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAApB,UACI,gCAAQ9E,KAAK+E,cACb,gCAAQ/E,KAAKgF,wB,GA9FE3F,IAAM4F,WAApBlD,EACVmD,YAAcC,E,ICTJC,E,uKAEb,OACI,mCACI,6D,GAJkB/F,IAAM4F,W,QCMnBI,E,kDAGjB,WAAYrD,GAAe,IAAD,8BACtB,cAAMA,IACDsD,aAAe,EAAKA,aAAahD,KAAlB,gBAFE,E,0DAKZiD,GACV,IAAMC,EAAW,IAAIC,SACfC,EAAW,IAAID,SAmBrB,OAjBAF,EAASI,SAAQ,SAACC,EAAOrF,GACrB,GAAY,UAARA,EAAiB,CACjB,IAAMsF,EAAOD,EACb,GAAIC,EAAK1D,MAAQ0D,EAAKC,KAClBJ,EAASK,OAAOxF,EAAKqF,OAClB,CACH,GAAIC,EAAK1D,OAAS0D,EAAKC,KACnB,MAAM,IAAIE,MAAM,qBACb,IAAKH,EAAK1D,MAAQ0D,EAAKC,KAC1B,MAAM,IAAIE,MAAJ,gBAAmBH,EAAKC,KAAxB,sBAIdN,EAASO,OAAOxF,EAAKqF,MAItB,CAACJ,WAAUE,c,sEAGTA,G,2EACLA,EAASO,IAAI,S,uBACPC,EAAM/E,KACRlB,UAAU,QACdiG,EAAIxF,SAASV,KAAK0E,QAAQ3F,OAC1BmH,EAAIrF,QAAQ6E,G,kBAELlE,MAAM,UAAW0E,GACnBzE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACgB,GAAD,OAAwCA,EAAME,UAAUwD,WAC7D1E,MAAK,SAAA0E,GAAO,OAAIA,EAAQtD,KAAI,SAAAuD,GAAM,OAAIA,EAAOrD,OAAOU,KAAKrC,WACzDQ,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,O,gCAE3B,IAAIwE,O,uIAITC,GAA+D,IAAD,OAC9DJ,EAAM/E,IAMZ,OALA+E,EAAIjG,UAAU,QACdiG,EAAIxF,SAASV,KAAK0E,QAAQ3F,OAC1BmH,EAAI1F,eAAe,oBACnB0F,EAAIrF,QAAQ0F,KAAKC,UAAUF,IAEpB9E,MAAM,QAAS0E,GACjBzE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,kBAAM,EAAK6E,aAAaH,Q,mCAG1BA,GACT,IAAMJ,EAAM/E,IACZ+E,EAAIjG,UAAU,UACdiG,EAAIxF,SAASV,KAAK0E,QAAQ3F,OAC1BmH,EAAI1F,eAAe,oBACnB0F,EAAIrF,QAAQyF,EAAQ,SAEpB9E,MAAM,UAAW0E,GACZtE,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,Q,mCAG3B6E,GAAsC,IAAD,OAC9CA,EAAEC,iBAEF,sBAAC,0CAAA1F,EAAA,sDACSsE,EAAW,IAAIE,SAASiB,EAAEE,eADnC,WAI+B,EAAKC,cAActB,GAAzCC,EAJT,EAISA,SAAUE,EAJnB,EAImBA,SAJnB,uDAMOoB,MAAM,KAAMC,SANnB,kCAUST,EAAgCU,OAAOC,YAAYzB,GAV5D,UAW+B,EAAKY,OAAOV,GAX3C,eAWGY,EAAQ,QAXX,iBAYuB,EAAKY,UAAUZ,GAZtC,QAYS7D,EAZT,OAaSnB,EAAOmB,EAAMM,OAAOU,KAAKrC,KACzBsC,EAAKpC,EAAKqC,UAAUrC,EAAKsC,YAAY,KAAO,GAClDM,SAASC,SAAS/C,KAAlB,kBAAkCsC,GAfrC,wDAAD,K,+BAqBA,OACI,qCACI,iEACA,eAACyD,EAAA,EAAD,CAAMC,SAAUpH,KAAKsF,aAArB,UACI,eAAC6B,EAAA,EAAKE,MAAN,CAAYC,UAAW,YAAvB,UACI,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CAAc1B,KAAM,QAAS2B,GAAG,QAAQhH,KAAK,OAAOiH,YAAY,0DAGpE,eAACP,EAAA,EAAKE,MAAN,CAAYC,UAAW,UAAvB,UACI,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CAAc1B,KAAM,MAAO2B,GAAG,QAAQhH,KAAK,OAAOiH,YAAY,0DAGlE,eAACP,EAAA,EAAKE,MAAN,CAAYC,UAAW,cAAvB,UACI,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CAAc1B,KAAM,UAAW2B,GAAG,WAAWC,YAAY,0DAG7D,cAACP,EAAA,EAAKE,MAAN,CAAYC,UAAW,WAAvB,SACI,cAACH,EAAA,EAAKQ,KAAN,CAAW7B,KAAM,QAAS8B,UAAU,MAGxC,eAACT,EAAA,EAAKE,MAAN,CAAYC,UAAW,aAAvB,UACI,cAAC9C,EAAA,EAAD,CAAQ/D,KAAK,SAASkE,QAAS,YAAavD,KAAM,UAAlD,0BACA,cAACoD,EAAA,EAAD,CAAQ/D,KAAK,SAASkE,QAAS,UAA/B,uC,GAzHYtF,IAAM4F,WAArBI,EACVH,YAAcC,E,YCIJ0C,E,kDAGjB,WAAY7F,GAAe,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACTG,KAAM,IAEV,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKwF,cAAgB,EAAKA,cAAcxF,KAAnB,gBANC,E,gEAUtBtC,KAAKqC,c,kCAII,IAAD,OACR,sBAAC,gEAAApB,EAAA,6DACSC,EAAOC,KACRb,WAAW,CAAC,eAAgB,qBAE3BoD,EAAK,EAAK1B,MAAM+F,MAAMC,OAAOtE,GAJtC,SAKqBlC,MAAM,SAAWkC,EAAIxC,GAL1C,cAKSQ,EALT,gBAM8CA,EAAIC,OANlD,cAMSc,EANT,OAQUoB,EAAwDpB,EAAxDoB,IAAKC,EAAmDrB,EAAnDqB,MAAOE,EAA4CvB,EAA5CuB,MAAOlD,EAAqC2B,EAArC3B,QAASiD,EAA4BtB,EAA5BsB,WAAYkE,EAAgBxF,EAAhBwF,aARlD,EAS4ExF,EAAMM,OAA/DmF,EATnB,EASUC,QAA+BC,EATzC,EASgCjC,QAA8BkC,EAT9D,EASsDrF,OATtD,UAU2DC,QAAQC,IAC5D,CAACC,EAASpC,QAAiCsH,GACvClF,EAASpC,QAA+BmH,GACxC/E,EAASpC,QAAgCqH,KAbpD,oCAUUE,EAVV,KAUuBC,EAVvB,KAUqCC,EAVrC,KAgBG,EAAKvE,SAAS,CACVwE,MAAOhG,EAAMM,OAAOU,KAAKrC,KACzBgB,KAAM,CACFyB,IAAKA,EAAKC,MAAOA,EAAOE,MAAOA,EAAOhB,OAAQsF,EAC9CxH,QAASA,EAASiD,WAAYA,EAAYkE,aAAcA,EACxDE,QAASI,EAAcpC,QAASqC,KArB3C,2CAAD,K,6BA2BI,IAAD,EAICxI,KAAKiC,MAAMG,KAFXyB,EAFD,EAECA,IAAKC,EAFN,EAEMA,MAAOE,EAFb,EAEaA,MAAO/E,EAFpB,EAEoBA,SACnB6B,EAHD,EAGCA,QAASiD,EAHV,EAGUA,WAAYkE,EAHtB,EAGsBA,aAGzB,OACI,gCACI,0CAAanE,KACb,wCAAWD,KACX,6CAAgB5E,KAChB,2CAAc8E,KACd,6CAAgBkE,KAChB,0CAAajE,KACb,4CAAelD,U,+BAMjB,IACCqF,EAAWnG,KAAKiC,MAAMG,KAAtB+D,QAGP,OAFArE,QAAQ4G,IAAInC,KAAKC,UAAUL,EAAQjE,OAEnC,OAAOiE,QAAP,IAAOA,OAAP,EAAOA,EAAStD,KAAI,SAACuD,EAAiC5C,GAAlC,OACZ,8BACI,mBAAGpC,KAAMgF,EAAOrD,OAAOU,KAAKrC,KAA5B,SAAmCgF,EAAOuC,kB,8BAOjD,IAAD,OACGR,EAAWnI,KAAKiC,MAAMG,KAAtB+F,QAEP,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAStF,KAAI,SAAC+F,EAA+BpF,GAChD,OACI,gCACI,8BAAMoF,EAAM7B,UACZ,8BAAM6B,EAAM7F,OAAOC,OAAO5B,OAC1B,8BAAMwH,EAAM7F,OAAOoF,QAAQ/G,OAE3B,gCAAMwH,EAAM7F,OAAOC,OAAO5B,KAA1B,OAAoC,EAAKa,MAAMG,KAAKY,OAAO/D,oB,iCAQvE,GAAIe,KAAK0E,QAAQzF,WAAae,KAAKiC,MAAMG,KAAKY,OAAO/D,SACjD,OACI,gCACI,cAACuF,EAAA,EAAD,CAAQG,QAAS,UAAjB,sBACA,cAACH,EAAA,EAAD,CAAQG,QAAS,SAAjB,2B,oCAOZ,GAAI3E,KAAK0E,QAAQ3F,MACb,OACI,eAACoI,EAAA,EAAD,CAAMC,SAAUpH,KAAK8H,cAArB,UACI,eAACX,EAAA,EAAKE,MAAN,WACI,cAACF,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CAAc1B,KAAK,UAAUrF,KAAK,QAAQiH,YAAY,eAE1D,cAAClD,EAAA,EAAD,CAAQ/D,KAAK,SAAb,2B,oCAOFiG,GAAuC,IAAD,OAChDA,EAAEC,iBACF,sBAAC,oCAAA1F,EAAA,6DACSsE,EAAW,IAAIE,SAASiB,EAAEE,gBAC1B9G,EAAOyG,KAAKsC,MAAMtC,KAAKC,UAAUQ,OAAOC,YAAY1B,MACtD,KAAW,EAAKtD,MAAMwG,OAEpBvC,EAAM/E,KACRlB,UAAU,QACdiG,EAAI1F,eAAe,oBACnB0F,EAAIxF,SAAS,EAAKgE,QAAQ3F,OAC1BmH,EAAIrF,QAAQ0F,KAAKC,UAAU1G,IAT9B,UAWqB0B,MAAM,SAAU0E,GAXrC,eAWSxE,EAXT,iBAYsBA,EAAIC,OAZ1B,QAYSA,EAZT,OAcG4E,KAAKC,UAAU,EAAKvE,MAAMG,KAAK+F,QAAQW,KAAKnH,IAC5C,EAAKsC,SAAS,CACV7B,KAAM,CACF+F,QAAS,EAAKlG,MAAMG,KAAK+F,WAjBpC,2CAAD,K,+BAwBA,OACI,sBAAK7D,UAAW,uBAAhB,UACI,oCAAOtE,KAAK8C,OAAZ,OAEA,yCACA,oCAAO9C,KAAKoG,SAAZ,OACA,oCAAOpG,KAAK+I,WAAZ,OAEA,2CACA,oCAAO/I,KAAKgJ,cAAZ,OACA,oCAAOhJ,KAAK4I,QAAZ,c,GA7JkBvJ,IAAM4F,WAAnB4C,EACV3C,YAAcC,E,ICNJ8D,E,uKAEb,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO3H,KAAM,IAAK4H,OAAK,EAACC,UAAW/D,IACnC,cAAC,IAAD,CAAO9D,KAAM,SAAU4H,OAAK,EAACC,UAAWpH,IACxC,cAAC,IAAD,CAAOT,KAAM,UAAW4H,OAAK,EAACC,UAAW9D,IACzC,cAAC,IAAD,CAAO/D,KAAM,mBAAoB4H,OAAK,EAACC,UAAWtB,IAClD,cAAC,IAAD,CAAUvG,KAAM,IAAKiD,GAAI,e,GATXlF,IAAM4F,W,gDCVzB,WACOmE,EAAeC,EAAgBC,GAC7C,IAAMC,EAAWD,EAAOE,OAAOJ,MAAQ,EAAMA,EAAQ,EAC/CK,EAAWH,EAAOE,OAAOH,OAAS,EAAMA,EAAS,EAEvD,OAAOrC,OAAO0C,QAAQ,CAClB,MAASN,EACT,OAAUC,EACV,KAAQE,EACR,IAAOE,IACR5G,KAAI,mCAAE8G,EAAF,KAAKC,EAAL,qBAAeD,EAAf,cAAsBC,MAAKC,KAAK,M,iBCM1BC,E,WAGjB,WAAYC,GAA8B,yBAF1CC,YAEyC,EACrChK,KAAKgK,OAASD,E,kEAId,IAAME,EAAQC,IAAG1D,UAAU,CACvB2D,UAAWnK,KAAKgK,OAAOG,UACvBC,aAAcpK,KAAKgK,OAAOI,aAC1BC,cAAerK,KAAKgK,OAAOK,cAC3BC,MAAOtK,KAAKgK,OAAOM,MACnBrI,MAAOjC,KAAKgK,OAAO/H,QAEvB,OAAOjC,KAAKgK,OAAOO,kBAAoB,IAAMN,I,uEAGnCO,G,0FACH,IAAIvH,SAAgB,SAACwH,GACxB,IAAMC,EAAaC,OAAOC,aAAY,WAClC,GAAGJ,EAAMK,OACLF,OAAOG,cAAcJ,QAErB,IACI,IAAMK,EAAaP,EAAMrG,SAAS/C,KAE5B4J,EADS,IAAI3J,IAAI0J,GAAYE,aACfC,IAAI,QAEpBF,IACAP,EAAQO,GACRR,EAAMW,SAEb,MAAOtJ,OAIb,S,gLAIUmJ,G,gFACXf,EAAQC,IAAG1D,UAAU,CACvBwE,KAAMA,EACNb,UAAWnK,KAAKgK,OAAOG,UACvBiB,cAAepL,KAAKgK,OAAOoB,cAC3BhB,aAAcpK,KAAKgK,OAAOI,aAC1BiB,WAAYrL,KAAKgK,OAAOqB,WACxBpJ,MAAOjC,KAAKgK,OAAO/H,QAEjBf,EAAO,CACT3B,OAAQ,Q,kBAGLiC,MAAMxB,KAAKgK,OAAOsB,iBAAmB,IAAMrB,EAAO/I,GACpDO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAIA,EAAK4J,gBAClB9J,MAAK,SAAA8J,GAAY,OAAIA,GAA8BtI,QAAQuI,OAAO,IAAIxF,MAAM,+B,8GCpEnFyF,EAA4D,mBAC5DC,EAAW,IAAIC,I,4CA0Cd,WAA2B3B,GAA3B,SAAA/I,EAAA,+EACI0J,OAAOiB,KAAK5B,EAAO6B,sBAAuB,QAC7CC,EAA8B,IAAK,IAAKnB,UAFzC,4C,kEAKA,WAAwB5L,GAAxB,eAAAkC,EAAA,6DACG8K,EAAU5K,KACRT,SAAS3B,GAFd,kBAIIyC,MAAM,UAAWuK,GACnBtK,MAAK,SAAAyE,GAAG,OAAIA,EAAIvE,UAChBF,MAAK,SAAAE,GAAI,OAAIA,EAAK1C,YAClBwC,MAAK,SAAAxC,GACF,MAAO,CAACF,MAAOA,EAAOE,SAAUA,OARrC,4C,sBA7CPyM,EAASM,IAAI,SAAU,IAAIlC,EAAY,CACnCK,UAAW,2EACXiB,cAAe,2BACfE,iBAAkB,6CAClBf,kBAAmB,+CACnBH,aAAcqB,EAAW,sBACzBnB,MAAO,eACPD,cAAe,OACfgB,WAAY,qBACZpJ,MAAO,WAGXyJ,EAASM,IAAI,QAAS,IAAIlC,EAAY,CAClCK,UAAW,mCACXiB,cAAe,mCACfE,iBAAkB,sCAClBf,kBAAmB,0CACnBH,aAAcqB,EAAW,qBACzBnB,MAAO,gBACPD,cAAe,OACfgB,WAAY,qBACZpJ,MAAO,WAGXyJ,EAASM,IAAI,QAAS,IAAIlC,EAAY,CAClCK,UAAW,uBACXiB,cAAe,aACfE,iBAAkB,uCAClBf,kBAAmB,2CACnBH,aAAcqB,EAAW,qBACzBnB,MAAO,QACPD,cAAe,QACfgB,WAAY,qBACZpJ,MAAO,W,ICjCUgK,E,kDAGjB,WAAYjK,GAAe,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CAACiK,MAAM,GAEpB,EAAKC,WAAa,EAAKA,WAAW7J,KAAhB,gBAClB,EAAK8J,YAAc,EAAKA,YAAY9J,KAAjB,gBACnB,EAAK+J,YAAc,EAAKA,YAAY/J,KAAjB,gBANG,E,yDAUtBtC,KAAKiE,SAAS,CAACiI,MAAM,M,oCAIrBlM,KAAKiE,SAAS,CAACiI,MAAM,M,kCAGbxF,GAAmC,IDgBb4F,EChBY,OACpCtC,GDewBsC,ECfD5F,EAAEE,cAAclD,GDgB1CgI,EAASR,IAAIoB,KAGjB,SAAP,mCClBsBC,CAAYvC,GAErBvI,MAAK,SAAA+I,GAAK,OAAIA,GAAgBvH,QAAQuI,OAAO,IAAIxF,MAAM,2BACvDvE,MAAK,SAAA+I,GAAK,OAAIR,EAAOwC,QAAQhC,MAC7B/I,MAAK,SAAAuJ,GAAI,OAAIhB,EAAOyC,eAAezB,MACnCvJ,MAAK,SAAA1C,GAAK,ODkBhB,SAAP,kCClB2B2N,CAAS3N,MACvB0C,MAAK,SAAAkL,GACFA,EAASzN,UAAY,IAAI0N,KACzB,EAAKlI,QAAQvF,WAAWwN,GACxB,IAAI,IAAJ,MAAwB3F,OAAO0C,QAAQiD,GAAvC,eAAiD,CAAC,IAAD,sBAAtCpM,EAAsC,KAAjCsM,EAAiC,KAC7CC,eAAeC,QAAQxM,EAAKsM,OAGnCjL,OAAM,SAAAC,GAAK,OAAIC,QAAQ4G,IAAI7G,Q,+BAIhC,OACI,qCACI,cAAC2C,EAAA,EAAD,CAAQF,UAAWtE,KAAKgC,MAAMsC,UAAWK,QAAS3E,KAAKgC,MAAM2C,QACrDP,QAASpE,KAAKmM,WADtB,SACmCnM,KAAKgC,MAAMgL,WAC9C,eAACC,EAAA,EAAD,CAAOC,WAAW,EAAOhB,KAAMlM,KAAKiC,MAAMiK,KACnCiB,OAAQnN,KAAKoM,YAAagB,SAAU,SAAUC,UAAU,EAD/D,UAEI,cAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,EAAzB,+BACA,cAACN,EAAA,EAAMhE,KAAP,UACI,eAACuE,EAAA,EAAD,CAAWC,MAAM,KAAjB,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAM,GAAhB,SACI,eAACzG,EAAA,EAAD,CAAMM,GAAIoG,IAAV,UACI,eAAC1G,EAAA,EAAKE,MAAN,CAAYI,GAAIiG,IAAKpG,UAAU,OAA/B,UACI,cAACH,EAAA,EAAKI,MAAN,CAAYuG,QAAM,EAACH,GAAI,CAACI,KAAM,EAAGC,OAAQ,GAAzC,gBACA,cAACH,EAAA,EAAD,CAAKF,GAAI,CAACI,KAAM,GAAhB,SACI,cAAC5G,EAAA,EAAKK,QAAN,CAAc/G,KAAK,QAAQiH,YAAY,qBAG/C,eAACP,EAAA,EAAKE,MAAN,CAAYI,GAAIiG,IAAKpG,UAAU,oBAA/B,UACI,cAACH,EAAA,EAAKI,MAAN,CAAYuG,QAAM,EAACH,GAAI,CAACI,KAAM,EAAGC,OAAQ,GAAzC,sBACA,cAACH,EAAA,EAAD,CAAKF,GAAI,CAACI,KAAM,GAAhB,SACI,cAAC5G,EAAA,EAAKK,QAAN,CAAc/G,KAAK,WAAWiH,YAAY,kBAIlD,cAACgG,EAAA,EAAD,CAAKpJ,UAAW,4BAAhB,SACI,cAACE,EAAA,EAAD,CAAQiD,GAAIoG,IAAKF,GAAI,CAACI,KAAM,IAAKpJ,QAAQ,UAAUlE,KAAK,SAAxD,kCAIJ,eAACiN,EAAA,EAAD,CAAKpJ,UAAW,4BAAhB,UACI,cAACE,EAAA,EAAD,CAAQiD,GAAIoG,IAAKF,GAAI,CAACI,KAAM,GAAIpJ,QAAQ,OAAxC,sEAGA,cAACH,EAAA,EAAD,CAAQiD,GAAIoG,IAAKF,GAAI,CAACI,KAAM,GAAIpJ,QAAQ,OAAxC,8CAOZ,uBAEA,eAAC+I,EAAA,EAAD,WACI,cAAClJ,EAAA,EAAD,CAAQiD,GAAIoG,IAAKnK,GAAI,SAAUiB,QAAS,SAAUP,QAASpE,KAAKqM,YAAhE,+BACA,cAAC7H,EAAA,EAAD,CAAQiD,GAAIoG,IAAKnK,GAAI,QAASiB,QAAS,UAAWP,QAASpE,KAAKqM,YAAhE,8BACA,cAAC7H,EAAA,EAAD,CAAQiD,GAAIoG,IAAKnK,GAAI,QAASiB,QAAS,UAAWP,QAASpE,KAAKqM,YAAhE,gD,GApFGhN,IAAM4F,WAApBgH,EACV/G,YAAcC,E,YCHJ8I,E,kDAGjB,WAAYjM,GAAc,IAAD,8BACrB,cAAMA,IACDkM,OAAS,EAAKA,OAAO5L,KAAZ,gBAFO,E,qDAMrBtC,KAAK0E,QAAQtF,QACb0N,eAAe1N,U,+BAIf,OACQ,eAAC+O,EAAA,EAAD,CAAarK,MAAO9D,KAAK0E,QAAQzF,SAAUyE,GAAG,YAA9C,UACI,cAACyK,EAAA,EAAYC,KAAb,sBACA,cAACD,EAAA,EAAYC,KAAb,uBACA,cAACD,EAAA,EAAYC,KAAb,yBACA,cAACD,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,CAAkBhK,QAASpE,KAAKkO,OAAhC,2B,GApBkB7O,IAAM4F,WAAvBgJ,EACV/I,YAAcC,E,ICEJmI,E,uKAGb,OACI,iCACI,eAACgB,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,UACI,cAACF,EAAA,EAAOG,MAAR,CAAcrN,KAAK,KAAnB,qBACA,cAACkN,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiBlL,GAAG,mBAApB,UACI,eAACmL,EAAA,EAAD,CAAKvK,UAAU,UAAf,UACI,cAACuK,EAAA,EAAIC,KAAL,CAAU1N,KAAK,KAAf,kBACA,cAACyN,EAAA,EAAIC,KAAL,CAAU1N,KAAK,WAAf,sBAGJ,cAAC+D,EAAY4J,SAAb,UACK,SAACC,GACE,OAAIA,EAAI/P,SAEA,cAAC,EAAD,IAIA,cAAC,EAAD,CAAOqF,UAAW,OAAQK,QAAS,kBAAnC,oC,GAtBJtF,IAAM4F,WCJrBgK,E,uKAEb,OACI,yBAAQ3K,UAAU,6CAAlB,UACI,qBAAKA,UAAU,2CAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,iBAAd,4BACA,sGAEJ,oBAAIA,UAAU,kCACd,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,iBAAd,mBACA,qBAAIA,UAAU,gBAAd,UACI,6BAAI,mBAAGlD,KAAK,KAAR,sBACJ,6BAAI,mBAAGA,KAAK,KAAR,sBACJ,6BAAI,mBAAGA,KAAK,KAAR,sBACJ,6BAAI,mBAAGA,KAAK,KAAR,4BAIZ,sBAAKkD,UAAU,wBAAf,UACI,oBAAIA,UAAU,iBAAd,mBACA,qBAAIA,UAAU,gBAAd,UACI,6BAAI,mBAAGlD,KAAK,KAAR,sBACJ,6BAAI,mBAAGA,KAAK,KAAR,sBACJ,6BAAI,mBAAGA,KAAK,KAAR,sBACJ,6BAAI,mBAAGA,KAAK,KAAR,iCAMpB,sBAAKkD,UAAU,oCAAf,iCACI,mBAAGlD,KAAK,2BAAR,wC,GAlCgB/B,IAAM4F,WCIrBiK,E,kDAGjB,WAAYlN,GAAe,IAAD,8BACtB,cAAMA,IACDiC,SAAW,EAAKA,SAAS3B,KAAd,gBAChB,EAAKlD,MAAQ,EAAKA,MAAMkD,KAAX,gBAEbxD,EAAaK,WAAa,EAAK8E,SAC/BnF,EAAaM,MAAQ,EAAKA,MAC1B,EAAK6C,MAAQnD,EAPS,E,oDAWtBkB,KAAKiE,SAAS,CACVlF,WAAOC,EACPC,cAAUD,EACVE,eAAWF,M,0CAKXgB,KAAKmP,UACLnP,KAAKoP,eAELpP,KAAKqP,iBAGLrP,KAAKsP,eACLtP,KAAKuP,kB,qCAMT,IADA,IAAIC,EAA2B,GAC/B,MAAkBxI,OAAOyI,KAAKzP,KAAKiC,OAAnC,eAA2C,CAAtC,IAAM1B,EAAG,KACViP,EAAIjP,GAAOuM,eAAe4C,QAAQnP,GAEtCiP,EAAIrQ,WAAaa,KAAKiE,SACtBuL,EAAIpQ,MAAQY,KAAKZ,MACjBY,KAAKiE,SAASuL,K,uCAId1C,eAAe1N,QACfY,KAAKZ,U,gCAIL,IAAMF,EAAY0N,KAAK/D,MAAMiE,eAAe4C,QAAQ,cAGpD,OAFY,IAAI9C,MAAO+C,UAETzQ,EAAY0Q,O,oCAI1B,IAAM1Q,EAAY0N,KAAK/D,MAAMiE,eAAe4C,QAAQ,cAGpD,OAFY,IAAI9C,MAAO+C,UAETzQ,EAAY0Q,M,wEAU1B,OACI,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO1G,OAAK,EAAC5H,KAAM,IAAnB,SACI,eAAC6D,EAAY0K,SAAb,CAAsBjK,MAAO5F,KAAKiC,MAAlC,UACI,sBAAKqC,UAAW,aAAhB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,OAEJ,cAAC,EAAD,SAGR,cAAC,IAAD,CAAOhD,KAAM,4B,GAjFIjC,IAAM4F,WAAtBiK,EACVhK,YAAcC,E,MCJzB2K,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJ9L,SAAS+L,eAAe,W","file":"static/js/main.62d45b3e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport type UserContextType = {\r\n    token: string | undefined,\r\n    nickname: string | undefined,\r\n    loginTime: Date | undefined,\r\n    setContext: Function | undefined,\r\n    clear: Function | undefined\r\n}\r\n\r\nexport const defaultValue:UserContextType = {\r\n    token:undefined,\r\n    nickname:undefined,\r\n    loginTime:undefined,\r\n    setContext:undefined,\r\n    clear:undefined\r\n}\r\n\r\nexport default React.createContext<UserContextType>(defaultValue);","export default {\r\n    init() {\r\n        return {\r\n            method: 'GET',\r\n            mode: 'same-origin' as RequestMode,\r\n            cache: \"default\" as RequestCache,\r\n            credentials: 'same-origin' as RequestCredentials,\r\n            redirect: 'follow' as RequestRedirect,\r\n            referrer: 'client',\r\n            headers: {} as Record<string, string>,\r\n            body: null as BodyInit | null,\r\n\r\n            reset() {\r\n                this.method = 'GET';\r\n                this.mode = 'same-origin' as RequestMode;\r\n                this.cache = \"default\" as RequestCache;\r\n                this.credentials = 'same-origin' as RequestCredentials;\r\n                this.redirect = 'follow' as RequestRedirect;\r\n                this.referrer = 'client';\r\n                this.headers = {} as Record<string, string>;\r\n                this.body = null;\r\n            },\r\n            setMethod(method: string) {\r\n                this.method = method;\r\n                return this;\r\n            },\r\n            setMode(mode: string) {\r\n                this.mode = mode as RequestMode;\r\n                return this;\r\n            },\r\n            setCache(cache: string) {\r\n                this.cache = cache as RequestCache;\r\n                return this;\r\n            },\r\n            setCredentials(credentials: string) {\r\n                this.credentials = credentials as RequestCredentials;\r\n                return this;\r\n            },\r\n            setHeaders(headers: Record<string, string>) {\r\n                this.headers = headers;\r\n                return this;\r\n            },\r\n            addHeaders(headers: Record<string, string>) {\r\n                for (let key in headers) {\r\n                    this.headers[key] = headers[key];\r\n                }\r\n                return this;\r\n            },\r\n            setContentType(type: string) {\r\n                this.headers['Content-Type'] = type;\r\n                return this;\r\n            },\r\n            setToken(token: string) {\r\n                this.headers['Authorization'] = `Bearer ${token}`;\r\n                return this;\r\n            },\r\n            setRedirect(redirect: string) {\r\n                this.redirect = redirect as RequestRedirect;\r\n                return this;\r\n            },\r\n            setReferrer(referrer: string) {\r\n                this.referrer = referrer;\r\n                return this;\r\n            },\r\n            setBody(content: BodyInit) {\r\n                this.body = content;\r\n                return this;\r\n            }\r\n        }\r\n    }\r\n}","import {HalLink, EntityModel, CollectionModel, PagedModel} from \"hateoas-hal-types\";\r\nimport FetchUtils from \"./FetchUtils\";\r\n\r\nexport default {\r\n    getData: async function <T> (link: HalLink):Promise<T> {\r\n        const init = FetchUtils.init();\r\n        const href = new URL(link.href);\r\n        const path = href.pathname\r\n\r\n        return fetch(path, init)\r\n            .then(res => res.json())\r\n            .catch(error => console.error(error))\r\n    },\r\n}","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button, Table} from \"react-bootstrap\";\r\nimport UserContext from \"../System/Context/UserContext\";\r\nimport {EntityModel, PagedModel} from \"hateoas-hal-types\";\r\nimport FetchUtils from \"../Utils/FetchUtils\";\r\nimport PostType from \"../System/Type/PostType\";\r\nimport HalUtils from \"../Utils/HalUtils\";\r\nimport MemberType from \"../System/Type/MemberType\";\r\n\r\ntype Props = {};\r\ntype State = { page: number, size: number, data: Record<string, any>[] };\r\nexport default class Board extends React.Component<Props, State> {\r\n    static contextType = UserContext;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            page: 0,\r\n            size: 10,\r\n            data: []\r\n        };\r\n\r\n        this.fetchData = this.fetchData.bind(this);\r\n    }\r\n\r\n    //TODO: 성능 개선 in backend\r\n    fetchData() {\r\n        (async () => {\r\n            const init = FetchUtils.init();\r\n            const {page, size} = this.state;\r\n            const url = '/post?' + `page=${page}&size=${size}`;\r\n            init.addHeaders({'Content-Type': 'Application/JSON'})\r\n\r\n            const response = await fetch(url, init);\r\n            const model: PagedModel<PostType> = await response.json();\r\n            const posts: EntityModel<PostType>[] = model._embedded.posts;\r\n            const writerLinks = posts.map(post => post._links.writer);\r\n\r\n            const writers = await Promise.all(writerLinks.map((link) =>\r\n                HalUtils.getData<EntityModel<MemberType>>(link)));\r\n            const nicknames = writers.map((member:EntityModel<MemberType>) => member.nickname);\r\n            const board = posts.map((post, index) => {\r\n                const path = post._links.self.href;\r\n                return {\r\n                    id: path.substring(path.lastIndexOf(\"/\") + 1),\r\n                    tag: post.tag,\r\n                    title: post.title,\r\n                    nickname: nicknames[index],\r\n                    createDate: post.createDate,\r\n                    views: post.views,\r\n                }\r\n            })\r\n            this.setState({data: board})\r\n        })();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n\r\n    tableHead() {\r\n        return (\r\n            <tr>\r\n                <th>No</th>\r\n                <th>tag</th>\r\n                <th>제목</th>\r\n                <th>작성자</th>\r\n                <th>작성날짜</th>\r\n                <th>조회수</th>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    onclick(index:number){\r\n        document.location.href=`#/board/${index}`\r\n    }\r\n\r\n    //TODO: reverse sort\r\n    tableBody() {\r\n        const {page, size, data} = this.state;\r\n\r\n        return data.map((post, index) => (\r\n            <tr key={post.id} onClick={() => this.onclick(post.id)}>\r\n                <td>{post.id}</td>\r\n                <td>{post.tag}</td>\r\n                <td>{post.title}</td>\r\n                <td>{post.nickname}</td>\r\n                <td>{post.createDate}</td>\r\n                <td>{post.views}</td>\r\n            </tr>\r\n        ));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'offset-sm-2 col-sm-8'}>\r\n                <h2>My Board</h2>\r\n                <Link to=\"/editor\">\r\n                    <Button className=\"float-right\"\r\n                            disabled={!this.context.token}\r\n                            variant={this.context.token ? \"primary\" : \"outline-light\"}>작성</Button>\r\n                </Link>\r\n\r\n                <Table striped hover>\r\n                    <thead>{this.tableHead()}</thead>\r\n                    <tbody>{this.tableBody()}</tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\ntype Props = {};\r\ntype State = {};\r\nexport default class Home extends React.Component<Props, State> {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Welcome To JyWorld!!!</h1>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport UserContext from \"../System/Context/UserContext\";\r\nimport FetchUtils from \"../Utils/FetchUtils\";\r\nimport UploadType from \"../System/Type/UploadType\";\r\nimport PostType from \"../System/Type/PostType\";\r\nimport {CollectionModel, EntityModel} from \"hateoas-hal-types\";\r\n\r\ntype Props = {};\r\ntype State = {};\r\nexport default class Editor extends React.Component<Props, State> {\r\n    static contextType = UserContext;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    splitFormData(formData: FormData) {\r\n        const postForm = new FormData();\r\n        const fileForm = new FormData();\r\n\r\n        formData.forEach((value, key) => {\r\n            if (key === \"files\") {\r\n                const file = value as File;\r\n                if (file.size && file.name) {\r\n                    fileForm.append(key, value);\r\n                } else {\r\n                    if (file.size && !file.name) {\r\n                        throw new Error(\"filename is empty\");\r\n                    } else if (!file.size && file.name) {\r\n                        throw new Error(`file \"${file.name}\" is 0 byte`);\r\n                    }\r\n                }\r\n            } else {\r\n                postForm.append(key, value);\r\n            }\r\n        })\r\n\r\n        return {postForm, fileForm};\r\n    }\r\n\r\n    async upload(fileForm: FormData) {\r\n        if (fileForm.has(\"files\")) {\r\n            const req = FetchUtils.init();\r\n            req.setMethod(\"POST\")\r\n            req.setToken(this.context.token);\r\n            req.setBody(fileForm);\r\n\r\n            return fetch(\"/upload\", req)\r\n                .then(res => res.json())\r\n                .then((model: CollectionModel<UploadType>) => model._embedded.uploads)\r\n                .then(uploads => uploads.map(upload => upload._links.self.href))\r\n                .catch(error => console.error(error))\r\n        } else {\r\n            return new Array<string>();\r\n        }\r\n    }\r\n\r\n    writePost(postData: Record<string, any>):Promise<EntityModel<PostType>> {\r\n        const req = FetchUtils.init();\r\n        req.setMethod(\"POST\");\r\n        req.setToken(this.context.token);\r\n        req.setContentType(\"application/json\");\r\n        req.setBody(JSON.stringify(postData));\r\n\r\n        return fetch(\"/post\", req)\r\n            .then(res => res.json())\r\n            .catch(() => this.cancelUpload(postData))\r\n    }\r\n\r\n    cancelUpload(postData: Record<string, any>) {\r\n        const req = FetchUtils.init();\r\n        req.setMethod(\"DELETE\");\r\n        req.setToken(this.context.token);\r\n        req.setContentType(\"application/json\");\r\n        req.setBody(postData[\"uploads\"]);\r\n\r\n        fetch(\"/upload\", req)\r\n            .catch((error) => console.error(error));\r\n    }\r\n\r\n    handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n\r\n        (async () => {\r\n            const formData = new FormData(e.currentTarget);\r\n            let postForm, fileForm;\r\n            try {\r\n                ({postForm, fileForm} = this.splitFormData(formData));\r\n            } catch (error) {\r\n                alert(error.message);\r\n                return;\r\n            }\r\n\r\n            const postData: Record<string, any> = Object.fromEntries(postForm);\r\n            postData['uploads'] = await this.upload(fileForm);\r\n            const model = await this.writePost(postData);\r\n            const path = model._links.self.href;\r\n            const id = path.substring(path.lastIndexOf(\"/\") + 1);\r\n            document.location.href=`#/board/${id}`;\r\n        })();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h2>게시글 작성</h2>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Group controlId={\"formTitle\"}>\r\n                        <Form.Label>제목</Form.Label>\r\n                        <Form.Control name={\"title\"} as=\"input\" type=\"text\" placeholder=\"제목을 입력하세요.\"/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId={\"formTag\"}>\r\n                        <Form.Label>태그</Form.Label>\r\n                        <Form.Control name={\"tag\"} as=\"input\" type=\"text\" placeholder=\"주제를 입력하세요.\"/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId={\"formContent\"}>\r\n                        <Form.Label>내용</Form.Label>\r\n                        <Form.Control name={\"content\"} as=\"textarea\" placeholder=\"내용을 입력하세요.\"/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId={\"formFile\"}>\r\n                        <Form.File name={\"files\"} multiple={true}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId={\"formButton\"}>\r\n                        <Button type=\"button\" variant={\"secondary\"} href={\"#/board\"}>취소</Button>\r\n                        <Button type=\"submit\" variant={\"primary\"}>작성</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport {EntityModel, PagedModel} from \"hateoas-hal-types\";\r\nimport UserContext from \"../System/Context/UserContext\";\r\nimport PostType from \"../System/Type/PostType\";\r\nimport HalUtils from \"../Utils/HalUtils\";\r\nimport MemberType from \"../System/Type/MemberType\";\r\nimport FetchUtils from \"../Utils/FetchUtils\";\r\nimport ReplyType from \"../System/Type/ReplyType\";\r\nimport UploadType from \"../System/Type/UploadType\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Form} from \"react-bootstrap\";\r\n\r\ntype Props = RouteComponentProps<{ id: string }>\r\ntype State = { proxy?: string, data: Record<string, any> }\r\nexport default class Post extends React.Component<Props, State> {\r\n    static contextType = UserContext;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {}\r\n        };\r\n        this.fetchData = this.fetchData.bind(this);\r\n        this.onSubmitReply = this.onSubmitReply.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    // TODO: \"eager mode\" member\r\n    fetchData() {\r\n        (async () => {\r\n            const init = FetchUtils.init();\r\n            init.addHeaders({'Content-Type': 'Application/JSON'})\r\n\r\n            const id = this.props.match.params.id;\r\n            const res = await fetch(\"/post/\" + id, init);\r\n            const model: EntityModel<PostType> = await res.json();\r\n\r\n            const {tag, title, views, content, createDate, modifiedDate} = model;\r\n            const {replies: repliesLink, uploads: uploadsLink, writer: writerLink} = model._links;\r\n            const [writerModel, repliesModel, uploadsModel] = await Promise.all(\r\n                [HalUtils.getData<EntityModel<MemberType>>(writerLink),\r\n                    HalUtils.getData<PagedModel<ReplyType>>(repliesLink),\r\n                    HalUtils.getData<PagedModel<UploadType>>(uploadsLink)]\r\n            )\r\n\r\n            this.setState({\r\n                proxy: model._links.self.href,\r\n                data: {\r\n                    tag: tag, title: title, views: views, writer: writerModel,\r\n                    content: content, createDate: createDate, modifiedDate: modifiedDate,\r\n                    replies: repliesModel, uploads: uploadsModel\r\n                }\r\n            })\r\n        })();\r\n    }\r\n\r\n    post() {\r\n        const {\r\n            tag, title, views, nickname,\r\n            content, createDate, modifiedDate\r\n        } = this.state.data;\r\n\r\n        return (\r\n            <div>\r\n                <div>title: {title}</div>\r\n                <div>tag: {tag}</div>\r\n                <div>nickname: {nickname}</div>\r\n                <div>create: {createDate}</div>\r\n                <div>modified: {modifiedDate}</div>\r\n                <div>views: {views}</div>\r\n                <div>content: {content}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //TODO: return file list with page navigator\r\n    upload() {\r\n        const {uploads} = this.state.data;\r\n        console.log(JSON.stringify(uploads.page));\r\n\r\n        return uploads?.map((upload: EntityModel<UploadType>, index: number) => (\r\n                <div>\r\n                    <a href={upload._links.self.href}>{upload.filename}</a>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n\r\n    //TODO: href -> replies List in Hateoas\r\n    reply() {\r\n        const {replies} = this.state.data;\r\n\r\n        return replies?.map((reply: EntityModel<ReplyType>, index: number) => {\r\n            return (\r\n                <div>\r\n                    <div>{reply.message}</div>\r\n                    <div>{reply._links.writer.href}</div>\r\n                    <div>{reply._links.replies.href}</div>\r\n\r\n                    <div>{reply._links.writer.href} == {this.state.data.writer.nickname}</div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    postMenu() {\r\n        //TODO: 유저 검증 (임시 처리)\r\n        if (this.context.nickname === this.state.data.writer.nickname) {\r\n            return (\r\n                <div>\r\n                    <Button variant={\"warning\"}> Modify </Button>\r\n                    <Button variant={\"danger\"}> Delete </Button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    replyWriter() {\r\n        if (this.context.token) {\r\n            return (\r\n                <Form onSubmit={this.onSubmitReply}>\r\n                    <Form.Group>\r\n                        <Form.Label>Reply</Form.Label>\r\n                        <Form.Control name=\"message\" type=\"input\" placeholder=\"message\"/>\r\n                    </Form.Group>\r\n                    <Button type=\"submit\"> Submit </Button>\r\n                </Form>\r\n            )\r\n        }\r\n    }\r\n\r\n    // TODO: reverse order paging 적용시키기 (작성 후 download 적용)\r\n    onSubmitReply(e: React.MouseEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        (async () => {\r\n            const formData = new FormData(e.currentTarget);\r\n            const body = JSON.parse(JSON.stringify(Object.fromEntries(formData)));\r\n            body[\"post\"] = this.state.proxy;\r\n\r\n            const req = FetchUtils.init();\r\n            req.setMethod(\"POST\")\r\n            req.setContentType(\"application/json\");\r\n            req.setToken(this.context.token);\r\n            req.setBody(JSON.stringify(body));\r\n\r\n            const res = await fetch(\"/reply\", req);\r\n            const json = await res.json();\r\n\r\n            JSON.stringify(this.state.data.replies.push(json));\r\n            this.setState({\r\n                data: {\r\n                    replies: this.state.data.replies\r\n                }\r\n            })\r\n        })();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'offset-sm-2 col-sm-8'}>\r\n                <div> {this.post()} </div>\r\n\r\n                <div> Files</div>\r\n                <div> {this.upload()} </div>\r\n                <div> {this.postMenu()} </div>\r\n\r\n                <div> Replies</div>\r\n                <div> {this.replyWriter()} </div>\r\n                <div> {this.reply()} </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {HashRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Board from '../Page/Board';\r\nimport Home from '../Page/Home';\r\nimport Editor from '../Page/Editor';\r\nimport Post from '../Page/Post';\r\n\r\ntype Props = {};\r\ntype State = {};\r\n\r\nexport default class Body extends React.Component<Props, State> {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route path={\"/\"} exact component={Home}/>\r\n                    <Route path={\"/board\"} exact component={Board}/>\r\n                    <Route path={\"/editor\"} exact component={Editor}/>\r\n                    <Route path={\"/board/:id(\\\\d+)\"} exact component={Post}/>\r\n                    <Redirect path={\"*\"} to={\"/\"}/>\r\n                </Switch>\r\n            </Router>\r\n        );\r\n    }\r\n}","export default {\r\n    getCenterLocation(width: number, height: number, parent: any) {\r\n        const parentX = (parent.screen.width / 2) - (width / 2);\r\n        const parentY = (parent.screen.height / 2) - (height / 2);\r\n\r\n        return Object.entries({\r\n            \"width\": width,\r\n            \"height\": height,\r\n            \"left\": parentX,\r\n            \"top\": parentY\r\n        }).map(([k, v]) => `${k} = ${v}`).join(',');\r\n    }\r\n}\r\n","import qs from \"qs\";\r\n\r\ninterface OauthServerType {\r\n    client_id: string;\r\n    client_secret: string;\r\n\r\n    authorization_uri: string;\r\n    response_type: string;\r\n    scope: string;\r\n\r\n    access_token_uri: string;\r\n    redirect_uri: string;\r\n    grant_type: string;\r\n    state: string;\r\n}\r\n\r\nexport default class OauthServer{\r\n    server: OauthServerType;\r\n\r\n    constructor(serverInfo: OauthServerType) {\r\n        this.server = serverInfo;\r\n    }\r\n\r\n    getAuthorizationUri() {\r\n        const param = qs.stringify({\r\n            client_id: this.server.client_id,\r\n            redirect_uri: this.server.redirect_uri,\r\n            response_type: this.server.response_type,\r\n            scope: this.server.scope,\r\n            state: this.server.state,\r\n        })\r\n        return this.server.authorization_uri + \"?\" + param;\r\n    };\r\n\r\n    async getCode(popup: Window) {\r\n        return new Promise<string>((resolve) => {\r\n            const intervalID = window.setInterval(() => {\r\n                if(popup.closed){\r\n                    window.clearInterval(intervalID);\r\n                }else {\r\n                    try{\r\n                        const currentUrl = popup.location.href;\r\n                        const params = new URL(currentUrl).searchParams;\r\n                        const code = params.get('code');\r\n\r\n                        if (code) {\r\n                            resolve(code);\r\n                            popup.close();\r\n                        }\r\n                    }catch (error){\r\n                        //ignore error\r\n                    }\r\n                }\r\n            }, 500);\r\n        })\r\n    }\r\n\r\n    async getAccessToken(code: string) {\r\n        const param = qs.stringify({\r\n            code: code,\r\n            client_id: this.server.client_id,\r\n            client_secret: this.server.client_secret,\r\n            redirect_uri: this.server.redirect_uri,\r\n            grant_type: this.server.grant_type,\r\n            state: this.server.state\r\n        })\r\n        const init = {\r\n            method: \"POST\"\r\n        }\r\n\r\n        return fetch(this.server.access_token_uri + \"?\" + param, init)\r\n            .then(res => res.json())\r\n            .then(json => json.access_token as string)\r\n            .then(access_token => access_token ? access_token : Promise.reject(new Error(\"can't get access token\")))\r\n    }\r\n}","import RenderUtils from \"../../Utils/RenderUtils\";\r\nimport {UserContextType} from '../Context/UserContext';\r\nimport OauthServer from \"./OauthServer\";\r\nimport FetchUtils from \"../../Utils/FetchUtils\";\r\n\r\nconst base_uri = process.env.PUBLIC_URL? process.env.PUBLIC_URL : \"http://localhost\";\r\nconst provider = new Map();\r\n\r\nprovider.set(\"google\", new OauthServer({\r\n    client_id: \"278564592334-j2vlvrr7lc06tfglindqf564tg75h0qt.apps.googleusercontent.com\",\r\n    client_secret: \"UF_Crv3IRVPtZLm7DdVEggzs\",\r\n    access_token_uri: \"https://www.googleapis.com/oauth2/v4/token\",\r\n    authorization_uri: \"https://accounts.google.com/o/oauth2/v2/auth\",\r\n    redirect_uri: base_uri + \"/oauth2/code/google\",\r\n    scope: \"email openid\",\r\n    response_type: \"code\",\r\n    grant_type: \"authorization_code\",\r\n    state: \"state\"\r\n}));\r\n\r\nprovider.set(\"kakao\", new OauthServer({\r\n    client_id: \"6d70a01b8b65ab91b4ecfaea251c1422\",\r\n    client_secret: \"c8bNweg3AF2xMkX5xmhHaCikplsjVcqm\",\r\n    access_token_uri: \"https://kauth.kakao.com/oauth/token\",\r\n    authorization_uri: \"https://kauth.kakao.com/oauth/authorize\",\r\n    redirect_uri: base_uri + \"/oauth2/code/kakao\",\r\n    scope: \"account_email\",\r\n    response_type: \"code\",\r\n    grant_type: \"authorization_code\",\r\n    state: \"state\"\r\n}));\r\n\r\nprovider.set(\"naver\", new OauthServer({\r\n    client_id: \"KbUfgrZHHcyINOOffQlU\",\r\n    client_secret: \"678P53KC0p\",\r\n    access_token_uri: \"https://nid.naver.com/oauth2.0/token\",\r\n    authorization_uri: \"https://nid.naver.com/oauth2.0/authorize\",\r\n    redirect_uri: base_uri + \"/oauth2/code/naver\",\r\n    scope: \"email\",\r\n    response_type: \"token\",\r\n    grant_type: \"authorization_code\",\r\n    state: \"state\"\r\n}));\r\n\r\nexport default function OauthProvider(servername: String): OauthServer {\r\n    return provider.get(servername);\r\n};\r\n\r\nexport async function PopupWindow(server: OauthServer) {\r\n    return window.open(server.getAuthorizationUri(), \"login\",\r\n        RenderUtils.getCenterLocation(500, 640, window));\r\n}\r\n\r\nexport async function UserInfo(token: string) {\r\n    const request = FetchUtils.init();\r\n    request.setToken(token);\r\n\r\n    return fetch(\"/member\", request)\r\n        .then(req => req.json())\r\n        .then(json => json.nickname)\r\n        .then(nickname => {\r\n            return {token: token, nickname: nickname} as UserContextType\r\n        })\r\n}","import React from 'react';\r\nimport {Button, ButtonProps, Modal, Row, Form, Col, Container} from \"react-bootstrap\";\r\nimport UserContext from \"../System/Context/UserContext\";\r\nimport OauthProvider, {PopupWindow, UserInfo} from \"../System/Oauth/OauthProvider\";\r\n\r\ntype Props = ButtonProps & {};\r\ntype State = { show: boolean };\r\n\r\nexport default class Login extends React.Component<Props, State> {\r\n    static contextType = UserContext;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {show: false}\r\n\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    handleShow() {\r\n        this.setState({show: true})\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({show: false})\r\n    }\r\n\r\n    handleLogin(e: React.MouseEvent<HTMLElement>) {\r\n        const server = OauthProvider(e.currentTarget.id);\r\n        const popup = PopupWindow(server);\r\n        popup\r\n            .then(popup => popup ? popup : Promise.reject(new Error(\"popup isn't working\")))\r\n            .then(popup => server.getCode(popup))\r\n            .then(code => server.getAccessToken(code))\r\n            .then(token => UserInfo(token))\r\n            .then(userInfo => {\r\n                userInfo.loginTime = new Date();\r\n                this.context.setContext(userInfo)\r\n                for(const [key, val] of Object.entries(userInfo)){\r\n                    sessionStorage.setItem(key, val as string)\r\n                }\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button className={this.props.className} variant={this.props.variant}\r\n                        onClick={this.handleShow}>{this.props.children}</Button>\r\n                <Modal animation={false} show={this.state.show}\r\n                       onHide={this.handleClose} backdrop={\"static\"} keyboard={false}>\r\n                    <Modal.Header closeButton>Register / Log In</Modal.Header>\r\n                    <Modal.Body>\r\n                        <Container fluid=\"sm\">\r\n                            <Row sm={{cols: 1}}>\r\n                                <Form as={Col}>\r\n                                    <Form.Group as={Row} controlId=\"test\">\r\n                                        <Form.Label column sm={{span: 2, offset: 1}}>ID</Form.Label>\r\n                                        <Col sm={{span: 8}}>\r\n                                            <Form.Control type=\"email\" placeholder=\"Enter email\"/>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Row} controlId=\"formGroupPassword\">\r\n                                        <Form.Label column sm={{span: 2, offset: 1}}>Password</Form.Label>\r\n                                        <Col sm={{span: 8}}>\r\n                                            <Form.Control type=\"password\" placeholder=\"Password\"/>\r\n                                        </Col>\r\n                                    </Form.Group>\r\n\r\n                                    <Row className={\"justify-content-sm-center\"}>\r\n                                        <Button as={Col} sm={{span: 10}} variant=\"primary\" type=\"submit\">\r\n                                            로그인\r\n                                        </Button>\r\n                                    </Row>\r\n                                    <Row className={\"justify-content-sm-center\"}>\r\n                                        <Button as={Col} sm={{span: 5}} variant=\"info\">\r\n                                            아이디/비밀번호 찾기\r\n                                        </Button>\r\n                                        <Button as={Col} sm={{span: 5}} variant=\"info\">\r\n                                            회원가입\r\n                                        </Button>\r\n                                    </Row>\r\n                                </Form>\r\n                            </Row>\r\n\r\n                            <hr/>\r\n\r\n                            <Row>\r\n                                <Button as={Col} id={'google'} variant={'danger'} onClick={this.handleLogin}>Login with Google</Button>\r\n                                <Button as={Col} id={'naver'} variant={'success'} onClick={this.handleLogin}>Login with Naver</Button>\r\n                                <Button as={Col} id={'kakao'} variant={'warning'} onClick={this.handleLogin}>Login with Kakao</Button>\r\n                            </Row>\r\n                        </Container>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport UserContext from \"../System/Context/UserContext\";\r\nimport {NavDropdown} from \"react-bootstrap\";\r\n\r\ntype Props = {}\r\ntype State = {}\r\nexport default class UserMenu extends React.Component<Props, State> {\r\n    static contextType = UserContext;\r\n\r\n    constructor(props:Props) {\r\n        super(props);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout(){\r\n        this.context.clear();\r\n        sessionStorage.clear();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <NavDropdown title={this.context.nickname} id=\"user-menu\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    <NavDropdown.Item>Activity</NavDropdown.Item>\r\n                    <NavDropdown.Item>Collection</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item onClick={this.logout}>Logout</NavDropdown.Item>\r\n                </NavDropdown>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Nav, Navbar} from \"react-bootstrap\";\r\nimport Login from \"../Modal/Login\";\r\nimport UserContext from \"../System/Context/UserContext\";\r\nimport UserMenu from \"../Menu/UserMenu\";\r\n\r\ntype Props = {};\r\ntype State = {};\r\n\r\nexport default class Header extends React.Component<Props, State> {\r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <Navbar bg=\"light\" expand='sm'>\r\n                    <Navbar.Brand href=\"/#\">JYWorld</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"/#\">Home</Nav.Link>\r\n                            <Nav.Link href=\"/#/board\">Board</Nav.Link>\r\n                        </Nav>\r\n\r\n                        <UserContext.Consumer>\r\n                            {(ctx) => {\r\n                                if (ctx.nickname) {\r\n                                    return (\r\n                                        <UserMenu/>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <Login className={'mr-1'} variant={\"outline-success\"}>Sign Up</Login>\r\n                                    )\r\n                                }\r\n                            }\r\n                            }\r\n                        </UserContext.Consumer>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\ntype Props = {};\r\ntype State = {};\r\n\r\nexport default class Footer extends React.Component<Props, State> {\r\n    render() {\r\n        return (\r\n            <footer className=\"page-footer font-small bg-light pt-4 w-100\">\r\n                <div className=\"container-fluid text-center text-md-left\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 mt-md-0 mt-3\">\r\n                            <h5 className=\"text-uppercase\">Footer Content</h5>\r\n                            <p>Here you can use rows and columns to organize your footer content.</p>\r\n                        </div>\r\n                        <hr className=\"clearfix w-100 d-md-none pb-3\"/>\r\n                        <div className=\"col-md-3 mb-md-0 mb-3\">\r\n                            <h5 className=\"text-uppercase\">Links</h5>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><a href=\"#!\">Link 1</a></li>\r\n                                <li><a href=\"#!\">Link 2</a></li>\r\n                                <li><a href=\"#!\">Link 3</a></li>\r\n                                <li><a href=\"#!\">Link 4</a></li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-3 mb-md-0 mb-3\">\r\n                            <h5 className=\"text-uppercase\">Links</h5>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><a href=\"#!\">Link 1</a></li>\r\n                                <li><a href=\"#!\">Link 2</a></li>\r\n                                <li><a href=\"#!\">Link 3</a></li>\r\n                                <li><a href=\"#!\">Link 4</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n                    <a href=\"https://mdbootstrap.com/\"> MDBootstrap.com</a>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Body from './Main/Body';\r\nimport Header from './Main/Header';\r\nimport Footer from \"./Main/Footer\";\r\nimport UserContext, {defaultValue, UserContextType} from \"./System/Context/UserContext\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\n\r\ntype Props = {};\r\ntype State = UserContextType;\r\nexport default class Website extends React.Component<Props, State> {\r\n    static contextType = UserContext;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.setState = this.setState.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n\r\n        defaultValue.setContext = this.setState;\r\n        defaultValue.clear = this.clear;\r\n        this.state = defaultValue;\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            token: undefined,\r\n            nickname: undefined,\r\n            loginTime: undefined\r\n        });\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (this.isValid()) {\r\n            this.loadUserInfo();\r\n        } else {\r\n            this.unloadUserInfo();\r\n        }\r\n\r\n        if (this.willExpired()) {\r\n            this.refreshAccess();\r\n        }\r\n    }\r\n\r\n    loadUserInfo(): void {\r\n        let obj: Record<string, any> = {};\r\n        for (const key of Object.keys(this.state)) {\r\n            obj[key] = sessionStorage.getItem(key);\r\n        }\r\n        obj.setContext = this.setState;\r\n        obj.clear = this.clear;\r\n        this.setState(obj as UserContextType);\r\n    }\r\n\r\n    unloadUserInfo() {\r\n        sessionStorage.clear();\r\n        this.clear();\r\n    }\r\n\r\n    isValid(): boolean {\r\n        const loginTime = Date.parse(sessionStorage.getItem(\"loginTime\")!);\r\n        const now = new Date().getTime();\r\n        const [ms, sec, min] = [1000, 60, 60];\r\n        return (now - loginTime < ms * sec * min)\r\n    }\r\n\r\n    willExpired(): boolean {\r\n        const loginTime = Date.parse(sessionStorage.getItem(\"loginTime\")!);\r\n        const now = new Date().getTime();\r\n        const [ms, sec, min] = [1000, 60, 60 - 50];\r\n        return (now - loginTime > ms * sec * min);\r\n    }\r\n\r\n//TODO:refreshAccessToken\r\n    refreshAccess(): void {\r\n    }\r\n\r\n\r\n    //TODO: clear function is undefined after refresh\r\n    render() {\r\n        return (\r\n            <>\r\n                <BrowserRouter>\r\n                    <Route exact path={\"/\"}>\r\n                        <UserContext.Provider value={this.state}>\r\n                            <div className={'min-vh-100'}>\r\n                                <Header/>\r\n                                <Body/>\r\n                            </div>\r\n                            <Footer/>\r\n                        </UserContext.Provider>\r\n                    </Route>\r\n                    <Route path={\"/oauth2/code/*\"}/>\r\n                </BrowserRouter>\r\n\r\n            </>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Website from \"./Website/Website\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Website/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}